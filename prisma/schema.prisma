generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Genre {
  id     Int          @id @default(autoincrement())
  name   String       @unique
  animes AnimeCache[] @relation("AnimeGenres")
}

model Recommendation {
  id           Int      @id @default(autoincrement())
  animeId      Int
  title        String
  titleEnglish String?
  imageUrl     String
  mood         String
  synopsis     String?
  userId       String?
  note         String?
  isFavorite   Boolean  @default(false)
  trailer      String?
  source       String?
  episodes     String?
  score        String?
  genres       String? // ← ✅ Ajoute cette ligne
  createdAt    DateTime @default(now())
}

model AnimeCache {
  id           Int        @id @default(autoincrement())
  animeId      Int        @unique
  title        String
  titleEnglish String?
  imageUrl     String
  synopsis     String?
  genres       Genre[]    @relation("AnimeGenres")
  trailer      String?
  source       String?
  episodes     String?
  score        String?
  moodCache    MoodCache?
  createdAt    DateTime   @default(now())
  moods        Mood[]     @relation("AnimeMoods")

  Mood Mood?
}

model AnimeSeen {
  id        Int      @id @default(autoincrement())
  animeId   Int
  userId    String
  createdAt DateTime @default(now())

  @@unique([animeId, userId]) // un anime ne peut être vu qu’une fois par user
}

model MoodCache {
  id           Int        @id @default(autoincrement())
  animeId      Int        @unique
  anime        AnimeCache @relation(fields: [animeId], references: [animeId])
  title        String
  titleEnglish String?
  imageUrl     String
  synopsis     String
  trailer      String?
  source       String?
  episodes     String?
  score        String?
  moods        Mood[]     @relation("AnimeMoods") // Assure que Mood est bien référencé
}

model Mood {
  id          Int          @id @default(autoincrement())
  mood        String       
  animeId     Int          
  anime       AnimeCache   @relation(fields: [animeId], references: [animeId])
  animeCaches AnimeCache[] @relation("AnimeMoods") // Ajout de la relation inverse
  moodCaches  MoodCache[]  @relation("AnimeMoods")
}
